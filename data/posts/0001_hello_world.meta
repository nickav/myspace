title: "Hello, World!"
desc:  "An amazing blog post"
date:  "2021-11-19 10:13:03"
image: "godrays_04.png"
author: "Nick Aversano"

@quote
```
It is well known the drunken sailor who staggers to the left or right with n independent random steps will, on the average, end up about sqrt(n) steps from the origin. But if there is a pretty girl in one direction, then his steps will tend to go in that direction and he will go a distance proportional to n. In a lifetime of many, many independent choices, small and large, a career with a vision will get you a distance proportional to n, while no vision will get you only the distance sqrt(n). In a sense, the main difference between those who go far and those who do not is some people have a vision and the others do not and therefore can only react to the current events as they happen.

I am preaching the message that, with apparently only one life to live on this earth, you ought to try to make significant contributions to humanity rather than just get along through life comfortably — that the life of trying to achieve excellence in some area is in itself a worthy goal for your life. It has often been observed the true gain is in the struggle and not in the achievement — a life without a struggle on your part to make yourself excellent is hardly a life worth living. This, it must be observed, is an opinion and not a fact, but it is based on observing many people’s lives and speculating on their total happiness rather than the moment to moment pleasures they enjoyed. Again, this opinion of their happiness must be my own interpretation as no one can know another’s life. Many reports by people who have written about the “good life” agree with the above opinion. Notice I leave it to you to pick your goals of excellence, but claim only a life without such a goal is not really living but it is merely existing—in my opinion. In ancient Greece Socrates (469–399) said: The unexamined life is not worth living.

- Richard Hamming, The Art of Doing Science and Engineering
```

```
This is text.
I should get grouped with the above line!

Here's a new p tag!
```

```
Hey what's up @link{'Amazing link', 'http://nickav.co'} and other stuff

This is a test @code{"std::string"}

This is another test `std::string` with some text after `a`, `b`, and...

@img{'godrays_04.png'}
```

@code
```
String string = os_read_entire_file(S("hello.txt"));
print("%S\n", string);
```

```

<hr/>


# UI Engines: Interfaces of the Future

Outline:
- Software Keeps Getting Slower!
- Dependencies keep going up!

- Users have come to expect software to be slow and buggy

- The Web was built for newspapers
- Websites have evolved more and more to resemble "single-page applications" with "modern frontned frameworks"
- Well... that's kind of not that different from desktop applications

- BUT! They add lots of stuff: the DOM, JavaScript -> slowness!
- I know a window should be able to start up fast!

- Online-first software -- egregious violations of users time:
- Gmail
- Spotify
- Figma

But does it have to be this way?
Could we reduce our reliance on browsers?

What browsers got right:
- sandboxing
- good cross-platform support
- easy to get started
- high-quality font rendering
- OS-level Accessibility

What browsers got wrong:
- slow!
- retained-mode UI
- weren't really designed to build applications!

WASM is the answer? Maybe. But there are some problems with the WASM story. Not to mention you pay a 4x slowdown.

What can we do about it?





It is well-known that software keeps getting slower and slower. Many people have spoken about this.
The old saying of Andy giveth and Bill taketh stil rings true to this day.

But we have become used to it!


There is an increasing trend on the web to build "single-page applications".
Not only do these applications have to add tens of thousands of dependencies to get anything done at all, but working in them feels difficult.

Not to mention they struggle at really trivial problems: for example, rendering 10k+ items in a list.
Then you have to introduce a "virtual list" which handles "recycling" the DOM elements just to get more or less back to exactly what your computer is already doing: rendering frames at 60Hz!

Modern web applications are starting to resemble actual desktop applications more and more, but the users pay a large
cost (in terms of time!) for using them.

The outright disrespect (whether implicit or explicit) for users is downright wrong. We can do better. We, as creators, should not put this slowness and burdens on the users.

The burnen should be on us to _fully understand what we are building_, and to do whatever necessary to build the highest-quality experience.
Otherwise, our users pay with their time.


On Windows, you can open a window and start drawing in less than 16ms. But, web applications we use take many seconds to open before you can even get started.


The things the web browser got right:
- good cross-platform support
- easy to get started
- high-quality font rendering
- OS-level Accessibility

The things the web browser got wrong:
- slow!
- retained-mode UI


On both sides of the equation there are egregious examples of terrible--and outright malicious--behavior!

Egregious examples of this include:

Gmail: 2s+ page load times for pretty much the whole time I've used it! How exactly is this experience better than a local-first mail client?

Spotify: You can't even use the desktop client anymore without an Internet connection! It prompts 


## Local-First Software


## The Web

The Web was designed to make newspapers online.

JavaScript was initially made in a couple of weeks.

Now, increasingly, we are using "modern frontend frameworks" to build interfaces that more closesly resemble desktop software.


## The Sandboxing Story

Some have said the web browser has succeeded because the operating system has failed. In some ways, that rings true.

It has been speculated that better process sandboxing would dramatically increase the amount of OS

There are lots of legacy OS APIs that you have to fight through to get anything done, and it's even worse because they all have slightly different and overlapping for example decent controller input on Windows.


## The ideal

